@model ConfigurationModel

@{
    Layout = "_ConfigurePlugin";
}
<script>
    $(document).ready(function() {
        $("#btnShowHideSecrets").on('click', function(event) {
            event.preventDefault();
            if ($('#liveApiKey input').attr("type") == "text") {
                $('#liveApiKey input').attr('type', 'password');
                $('#liveApiSecret input').attr('type', 'password');
            } else {
                $('#liveApiKey input').attr('type', 'text');
                $('#liveApiSecret input').attr('type', 'text');
            }
        });
    });
</script>
@await Component.InvokeAsync("StoreScopeConfiguration")

<form asp-controller="XummConfiguration" asp-action="Configure" method="post">
    <div class="card card-default">
        <h5 class="card-header">@Html.Raw(T("Plugins.Payments.Xumm.Section.ApiSettings").Text)</h5>
        <div class="card-body">
            @Html.Raw(string.Format(T("Plugins.Payments.Xumm.Section.ApiSettings.Instructions").Text, Model.WebhookUrl))

            <div class="form-group row">
                <div class="col-md-3">
                    <nop-override-store-checkbox asp-for="ApiKey_OverrideForStore" asp-input="ApiKey" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                    <nop-label asp-for="ApiKey" />
                </div>
                <div class="col-md-6" id="liveApiKey">
                    <nop-editor asp-for="ApiKey" asp-required="true" html-attributes="@(new { @class = Model.ApiCredentialsProvided && !Model.ValidApiCredentials ? "form-control is-invalid" : "form-control", @type = "password" })" asp-render-form-control-class="false" />
                    <span asp-validation-for="ApiKey"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-3">
                    <nop-override-store-checkbox asp-for="ApiSecret_OverrideForStore" asp-input="ApiSecret" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                    <nop-label asp-for="ApiSecret"/>
                </div>
                <div class="col-md-6" id="liveApiSecret">
                    <nop-editor asp-for="ApiSecret" asp-required="true" html-attributes="@(new { @class = Model.ApiCredentialsProvided && !Model.ValidApiCredentials ? "form-control is-invalid" : "form-control", @type = "password" })" asp-render-form-control-class="false" />
                    <span asp-validation-for="ApiSecret"></span>
                </div>
            </div>
            @if (Model.ValidApiCredentials)
            {
                <div class="form-group row" id="liveWebhookUrl">
                    <div class="col-md-3">
                        <nop-label asp-for="WebhookUrl" />
                    </div>
                    <div class="col-md-6">
                        <nop-editor asp-for="WebhookUrl" asp-required="true" html-attributes="@(new { @class = Model.HasWebhookUrlConfigured ? "form-control" : "form-control is-invalid", disabled = "disabled" })" asp-render-form-control-class="false" />
                    </div>
                </div>
            }
            <div class="form-group row">
                <div class="col-md-6 offset-md-3">
                    <input type="submit" name="save" class="btn btn-primary" value="@T("Admin.Common.Save")" />
                    <input id="btnShowHideSecrets" type="button" class="btn btn-secondary" value="@T("Plugins.Payments.Xumm.Button.ShowHideSecrets")" />
                </div>
            </div>
        </div>
    </div>

    @if (Model.ValidApiCredentials)
    {
        <div class="card card-default">
            <h5 class="card-header">@Html.Raw(T("Plugins.Payments.Xumm.Section.XrplSettings").Text)</h5>
            <div class="card-body">
                @Html.Raw(T("Plugins.Payments.Xumm.Section.XrplSettings.Instructions").Text)
                <div class="form-group row" id="xrpladdress">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="XrplAddress_OverrideForStore" asp-input="XrplAddress" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="XrplAddress" />
                    </div>
                    <div class="col-md-6">
                        <nop-editor asp-for="XrplAddress" asp-required="true" />
                        <span asp-validation-for="XrplAddress"></span>
                    </div>
                    <div class="col-md-3">
                        <a href="@Url.Action("SetAccountWithXumm", "XummConfiguration")" style="padding-top: 0"><img src="~/Plugins/Payments.Xumm/Content/Images/signin.svg" style="height: 38px; width: 218.5px" alt="@T("Plugins.Payments.Xumm.Fields.XrplAddress.SignInWithXumm").Text" /></a>
                    </div>
                </div>
                @if (Model.ValidXrplAddress)
                {
                    <div class="form-group row" id="xrplcurrency">
                        <div class="col-md-3">
                            <nop-override-store-checkbox asp-for="XrplCurrencyAndIssuer_OverrideForStore" asp-input="XrplCurrencyAndIssuer" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                            <nop-label asp-for="XrplCurrencyAndIssuer" asp-required="true" />
                        </div>
                        <div class="col-md-6">
                            <nop-select asp-for="XrplCurrencyAndIssuer" asp-items="Model.XrplCurrencies" asp-required="true" class='@(!Model.TrustSetRequired && !Model.ShopCurrencyRequired ? "" : "is-invalid" )' />
                            <span asp-validation-for="XrplCurrencyAndIssuer"></span>
                        </div>
                        <div class="col-md-3">
                            @if (Model.TrustSetRequired)
                            {
                                <a class="btn btn-warning" href="@Url.Action("SetTrustLine", "XummConfiguration")" style="width: 218.5px">@T("Plugins.Payments.Xumm.Fields.XrplCurrency.SetTrustLine").Text</a>
                            }
                        </div>
                    </div>
                    <div class="form-group row" id="xrplpaymentdestinationtag">
                        <div class="col-md-3">
                            <nop-override-store-checkbox asp-for="XrplPaymentDestinationTag_OverrideForStore" asp-input="XrplPaymentDestinationTag" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                            <nop-label asp-for="XrplPaymentDestinationTag" asp-required="true" />
                        </div>
                        <div class="col-md-3">
                            <nop-editor asp-for="XrplPaymentDestinationTag" />
                            <span asp-validation-for="XrplPaymentDestinationTag"></span>
                        </div>
                    </div>
                    <div class="form-group row" id="xrplrefunddestinationtag">
                        <div class="col-md-3">
                            <nop-override-store-checkbox asp-for="XrplRefundDestinationTag_OverrideForStore" asp-input="XrplRefundDestinationTag" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                            <nop-label asp-for="XrplRefundDestinationTag" asp-required="true" />
                        </div>
                        <div class="col-md-3">
                            <nop-editor asp-for="XrplRefundDestinationTag" />
                            <span asp-validation-for="XrplRefundDestinationTag"></span>
                        </div>
                    </div>
                }
                <div class="form-group row">
                    <div class="col-md-6 offset-md-3">
                        <input type="submit" name="save" class="btn btn-primary" value="@T("Admin.Common.Save")" />
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-default">
            <h5 class="card-header">@Html.Raw(T("Plugins.Payments.Xumm.Section.AdditionalSettings").Text)</h5>
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="AdditionalFee_OverrideForStore" asp-input="AdditionalFee" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="AdditionalFee" />
                    </div>
                    <div class="col-md-6">
                        <nop-editor asp-for="AdditionalFee" />
                        <span asp-validation-for="AdditionalFee"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-3">
                        <nop-override-store-checkbox asp-for="AdditionalFeePercentage_OverrideForStore" asp-input="AdditionalFeePercentage" asp-store-scope="@Model.ActiveStoreScopeConfiguration" />
                        <nop-label asp-for="AdditionalFeePercentage" />
                    </div>
                    <div class="col-md-6">
                        <nop-editor asp-for="AdditionalFeePercentage" />
                        <span asp-validation-for="AdditionalFeePercentage"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-6 offset-md-3">
                        <input type="submit" name="save" class="btn btn-primary" value="@T("Admin.Common.Save")" />
                    </div>
                </div>
            </div>
        </div>
    }
</form>
